#include <msp430g2553.h>

int main(void) {
    WDTCTL = WDTPW + WDTHOLD; //Disable the Watchdog timer for our convenience.
    P1DIR |= 0x41; //Set pin 1.6 and 1.0 to the output direction.
    P1SEL |= 0x40; //Select pin 1.6 as our PWM output.
    TA0CCR0 = 1000; //Set the period in the Timer A0 Capture/Compare 0 register to 1000 us.
    TA0CCTL1 = OUTMOD_7; //toggle/
    TA0CCR1 = 500; //The period in microseconds that the power is ON. It's half the time, which translates to a 50% duty cycle.
    TA0CTL = TASSEL_2 + MC_1; //TASSEL_2 selects SMCLK as the clock source, and MC_1 tells it to count up to the value in TA0CCR0.

      P1OUT =  BIT3;                            // P1.3 set, else reset
      P1REN |= BIT3;                            // P1.3 pullup
      P1IE |= BIT3;                             // P1.3 interrupt enabled
      P1IES |= BIT3;                            // P1.3 Hi/lo edge
      P1IFG &= ~BIT3;                           // P1.3 IFG cleared


    __bis_SR_register(LPM0_bits + GIE); //Switch to low power mode 0.
}

// Port 1 interrupt service routine (Interrupt when button is pressed)
#pragma vector=PORT1_VECTOR
__interrupt void Port_1(void)

{

    if(TA0CCR1 < 1000)
    {
        TA0CCR1 = TA0CCR1 + 100;
    }
    else
    {
        TA0CCR1 = 0;
    }
    P1IFG &= ~BIT3;                           // P1.3 IFG cleared (No Interrupt pending)

}
